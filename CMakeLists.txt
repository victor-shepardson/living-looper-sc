###############################################################################
# CMakeLists file for RAVE
# Generated by Victor Shepardson
# 2022-02-16
###############################################################################

###############################################################################
# basic project config
cmake_minimum_required(VERSION 3.12)
set(project_name "LivingLooper")
set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake_modules ${CMAKE_MODULE_PATH})
set(CMAKE_CXX_STANDARD 17)

include(CMakePrintHelpers)

###############################################################################
# load modules
include(SuperColliderServerPlugin RESULT_VARIABLE server_plugin_found)
if(NOT server_plugin_found)
    message(FATAL_ERROR "Could not find server plugin functions module")
endif()

include(SuperColliderCompilerConfig RESULT_VARIABLE compiler_config_found)
if(NOT compiler_config_found)
    message(FATAL_ERROR "Could not find compiler config module")
endif()

# Windows - puts redistributable DLLs in install directory
include(InstallRequiredSystemLibraries)

# unix
cmake_print_variables(CMAKE_HOST_SYSTEM_NAME)
set(CMAKE_MACOSX_RPATH 1)   
if(CMAKE_HOST_SYSTEM_NAME STREQUAL "Linux")
    set(CMAKE_INSTALL_RPATH "$ORIGIN/ignore")
elseif(CMAKE_HOST_SYSTEM_NAME STREQUAL "Darwin")
    set(CMAKE_INSTALL_RPATH "@loader_path/ignore")
endif()

sc_check_sc_path("${SC_PATH}")
message(STATUS "Found SuperCollider: ${SC_PATH}")
set(SC_PATH "${SC_PATH}" CACHE PATH
    "Path to SuperCollider source. Relative paths are treated as relative to this script" FORCE)

include("${SC_PATH}/SCVersion.txt")
message(STATUS "Building plugins for SuperCollider version: ${SC_VERSION}")

# set project here to avoid SCVersion.txt clobbering our version info
project(${project_name})
sc_do_initial_compiler_config() # do after setting project so compiler ID is available

if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT OR NOT CMAKE_INSTALL_PREFIX)
    message(WARNING "No install prefix provided, defaulting to $BUILD_DIR/install")
    set(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/install" CACHE PATH "Install prefix" FORCE)
endif()

message(STATUS "Install directory set to: ${CMAKE_INSTALL_PREFIX}")

####################################################################################################
# options
option(SUPERNOVA "Build plugins for supernova" ON)
option(SCSYNTH "Build plugins for scsynth" ON)
option(NATIVE "Optimize for native architecture" OFF)
option(STRICT "Use strict warning flags" OFF)
option(NOVA_SIMD "Build plugins with nova-simd support." ON)

####################################################################################################
# include libraries

if (NOVA_SIMD)
	add_definitions(-DNOVA_SIMD)
	include_directories(${SC_PATH}/external_libraries/nova-simd)
endif()

find_package(Torch REQUIRED) # find torch

cmake_print_variables(TORCH_LIBRARIES)
cmake_print_variables(TORCH_INCLUDE_DIRS)
cmake_print_variables(TORCH_INSTALL_PREFIX)

file(GLOB TORCH_DLLS LIST_DIRECTORIES FALSE "${TORCH_INSTALL_PREFIX}/lib/*[.dylib|.so|.so.1|.dll]")
cmake_print_variables(TORCH_DLLS)

install(FILES ${TORCH_DLLS} DESTINATION "LivingLooper/ignore")

####################################################################################################
# Begin target LivingLooper

set(LL_cpp_files
    ../living-looper-core/Resampler.hpp
    ../living-looper-core/LLModel.hpp
    plugins/LivingLooper/LivingLooper.hpp
    plugins/LivingLooper/LivingLooper.cpp
)
set(LL_sc_files
    plugins/LivingLooper/LivingLooper.sc
)
set(LL_schelp_files
    HelpSource/Classes/LivingLooper.schelp
    HelpSource/Classes/LLGUI.schelp
)

sc_add_server_plugin(
    "LivingLooper" # destination directory
    "LivingLooper" # target name
    "${LL_cpp_files}"
    "${LL_sc_files}"
    "${LL_schelp_files}"
    "${TORCH_LIBRARIES}" # shared libraries
)

# End target LivingLooper
####################################################################################################

####################################################################################################
# END PLUGIN TARGET DEFINITION
####################################################################################################

message(STATUS "Generating plugin targets done")
